name: CI Pipeline for Spring Boot App

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Source Code
      uses: actions/checkout@v3

    - name: Set Up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Cache Maven Dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build with Maven
      run: mvn clean package -DskipTests

    - name: List target directory (debugging)
      run: ls -l target/

    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H localhost >> ~/.ssh/known_hosts
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Deploy to Tomcat
      run: |
        # Define variables
        WAR_FILE=$(find target/ -name "*.war")
        DEPLOY_PATH="D:/Soft/webapps"  # Adjust this path if necessary

        # Check if the WAR file exists
        if [ -z "$WAR_FILE" ]; then
          echo "WAR file not found! Deployment aborted."
          exit 1
        fi

        echo "WAR file found, proceeding with deployment."

        # Copy the WAR file to the Tomcat webapps directory
        scp "$WAR_FILE" "$TOMCAT_USER@$TOMCAT_HOST:$DEPLOY_PATH"
        echo "WAR file copied successfully."
